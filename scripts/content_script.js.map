{
  "version": 3,
  "sources": ["lib.mjs", "digest.mjs", "../node_modules/.pnpm/@medv+finder@3.2.0/node_modules/@medv/finder/finder.js", "model.mjs", "sync.mjs", "content.js"],
  "sourcesContent": ["export const allowedActions = {\n  hide: \"toggleHide\",\n  annotate: \"toggleAnnotate\",\n  delete: \"toggleDelete\",\n  rewrite: \"toggleRewrite\",\n};\n\nexport const stateActions = {\n  save: \"save\",\n  load: \"load\",\n};\n\nexport const customCSSClasses = [\"hovering\", \"hidden-hover\"];\n\n/** @param {string} action\n  @returns {boolean} */\nexport const isValidAction = (action) => {\n  return (\n    Object.values(allowedActions).includes(action) ||\n    Object.values(stateActions).includes(action)\n  );\n};\n\n/** @param {string} action\n  @returns {boolean} */\nexport const isAllowedAction = (action) => {\n  return Object.values(allowedActions).includes(action);\n};\n\n/** @param {string} action\n  @returns {boolean} */\nexport const isStateAction = (action) => {\n  return Object.values(stateActions).includes(action);\n};\n", "/** Generate a Hash of a String\n * @param {string} input - string to be hashed\n * @returns {Promise<string>} - the hexadecimal hashed string\n */\nexport async function generateHash(input) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(input);\n  const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray\n    .map((b) => b.toString(16).padStart(2, \"0\"))\n    .join(\"\");\n  return hashHex;\n}\n", "// License: MIT\n// Author: Anton Medvedev <anton@medv.io>\n// Source: https://github.com/antonmedv/finder\nlet config;\nlet rootDocument;\nlet start;\nexport function finder(input, options) {\n    start = new Date();\n    if (input.nodeType !== Node.ELEMENT_NODE) {\n        throw new Error(`Can't generate CSS selector for non-element node type.`);\n    }\n    if ('html' === input.tagName.toLowerCase()) {\n        return 'html';\n    }\n    const defaults = {\n        root: document.body,\n        idName: (name) => true,\n        className: (name) => true,\n        tagName: (name) => true,\n        attr: (name, value) => false,\n        seedMinLength: 1,\n        optimizedMinLength: 2,\n        threshold: 1000,\n        maxNumberOfTries: 10000,\n        timeoutMs: undefined,\n    };\n    config = { ...defaults, ...options };\n    rootDocument = findRootDocument(config.root, defaults);\n    let path = bottomUpSearch(input, 'all', () => bottomUpSearch(input, 'two', () => bottomUpSearch(input, 'one', () => bottomUpSearch(input, 'none'))));\n    if (path) {\n        const optimized = sort(optimize(path, input));\n        if (optimized.length > 0) {\n            path = optimized[0];\n        }\n        return selector(path);\n    }\n    else {\n        throw new Error(`Selector was not found.`);\n    }\n}\nfunction findRootDocument(rootNode, defaults) {\n    if (rootNode.nodeType === Node.DOCUMENT_NODE) {\n        return rootNode;\n    }\n    if (rootNode === defaults.root) {\n        return rootNode.ownerDocument;\n    }\n    return rootNode;\n}\nfunction bottomUpSearch(input, limit, fallback) {\n    let path = null;\n    let stack = [];\n    let current = input;\n    let i = 0;\n    while (current) {\n        const elapsedTime = new Date().getTime() - start.getTime();\n        if (config.timeoutMs !== undefined && elapsedTime > config.timeoutMs) {\n            throw new Error(`Timeout: Can't find a unique selector after ${elapsedTime}ms`);\n        }\n        let level = maybe(id(current)) ||\n            maybe(...attr(current)) ||\n            maybe(...classNames(current)) ||\n            maybe(tagName(current)) || [any()];\n        const nth = index(current);\n        if (limit == 'all') {\n            if (nth) {\n                level = level.concat(level.filter(dispensableNth).map((node) => nthChild(node, nth)));\n            }\n        }\n        else if (limit == 'two') {\n            level = level.slice(0, 1);\n            if (nth) {\n                level = level.concat(level.filter(dispensableNth).map((node) => nthChild(node, nth)));\n            }\n        }\n        else if (limit == 'one') {\n            const [node] = (level = level.slice(0, 1));\n            if (nth && dispensableNth(node)) {\n                level = [nthChild(node, nth)];\n            }\n        }\n        else if (limit == 'none') {\n            level = [any()];\n            if (nth) {\n                level = [nthChild(level[0], nth)];\n            }\n        }\n        for (let node of level) {\n            node.level = i;\n        }\n        stack.push(level);\n        if (stack.length >= config.seedMinLength) {\n            path = findUniquePath(stack, fallback);\n            if (path) {\n                break;\n            }\n        }\n        current = current.parentElement;\n        i++;\n    }\n    if (!path) {\n        path = findUniquePath(stack, fallback);\n    }\n    if (!path && fallback) {\n        return fallback();\n    }\n    return path;\n}\nfunction findUniquePath(stack, fallback) {\n    const paths = sort(combinations(stack));\n    if (paths.length > config.threshold) {\n        return fallback ? fallback() : null;\n    }\n    for (let candidate of paths) {\n        if (unique(candidate)) {\n            return candidate;\n        }\n    }\n    return null;\n}\nfunction selector(path) {\n    let node = path[0];\n    let query = node.name;\n    for (let i = 1; i < path.length; i++) {\n        const level = path[i].level || 0;\n        if (node.level === level - 1) {\n            query = `${path[i].name} > ${query}`;\n        }\n        else {\n            query = `${path[i].name} ${query}`;\n        }\n        node = path[i];\n    }\n    return query;\n}\nfunction penalty(path) {\n    return path.map((node) => node.penalty).reduce((acc, i) => acc + i, 0);\n}\nfunction unique(path) {\n    const css = selector(path);\n    switch (rootDocument.querySelectorAll(css).length) {\n        case 0:\n            throw new Error(`Can't select any node with this selector: ${css}`);\n        case 1:\n            return true;\n        default:\n            return false;\n    }\n}\nfunction id(input) {\n    const elementId = input.getAttribute('id');\n    if (elementId && config.idName(elementId)) {\n        return {\n            name: '#' + CSS.escape(elementId),\n            penalty: 0,\n        };\n    }\n    return null;\n}\nfunction attr(input) {\n    const attrs = Array.from(input.attributes).filter((attr) => config.attr(attr.name, attr.value));\n    return attrs.map((attr) => ({\n        name: `[${CSS.escape(attr.name)}=\"${CSS.escape(attr.value)}\"]`,\n        penalty: 0.5,\n    }));\n}\nfunction classNames(input) {\n    const names = Array.from(input.classList).filter(config.className);\n    return names.map((name) => ({\n        name: '.' + CSS.escape(name),\n        penalty: 1,\n    }));\n}\nfunction tagName(input) {\n    const name = input.tagName.toLowerCase();\n    if (config.tagName(name)) {\n        return {\n            name,\n            penalty: 2,\n        };\n    }\n    return null;\n}\nfunction any() {\n    return {\n        name: '*',\n        penalty: 3,\n    };\n}\nfunction index(input) {\n    const parent = input.parentNode;\n    if (!parent) {\n        return null;\n    }\n    let child = parent.firstChild;\n    if (!child) {\n        return null;\n    }\n    let i = 0;\n    while (child) {\n        if (child.nodeType === Node.ELEMENT_NODE) {\n            i++;\n        }\n        if (child === input) {\n            break;\n        }\n        child = child.nextSibling;\n    }\n    return i;\n}\nfunction nthChild(node, i) {\n    return {\n        name: node.name + `:nth-child(${i})`,\n        penalty: node.penalty + 1,\n    };\n}\nfunction dispensableNth(node) {\n    return node.name !== 'html' && !node.name.startsWith('#');\n}\nfunction maybe(...level) {\n    const list = level.filter(notEmpty);\n    if (list.length > 0) {\n        return list;\n    }\n    return null;\n}\nfunction notEmpty(value) {\n    return value !== null && value !== undefined;\n}\nfunction* combinations(stack, path = []) {\n    if (stack.length > 0) {\n        for (let node of stack[0]) {\n            yield* combinations(stack.slice(1, stack.length), path.concat(node));\n        }\n    }\n    else {\n        yield path;\n    }\n}\nfunction sort(paths) {\n    return [...paths].sort((a, b) => penalty(a) - penalty(b));\n}\nfunction* optimize(path, input, scope = {\n    counter: 0,\n    visited: new Map(),\n}) {\n    if (path.length > 2 && path.length > config.optimizedMinLength) {\n        for (let i = 1; i < path.length - 1; i++) {\n            if (scope.counter > config.maxNumberOfTries) {\n                return; // Okay At least I tried!\n            }\n            scope.counter += 1;\n            const newPath = [...path];\n            newPath.splice(i, 1);\n            const newPathKey = selector(newPath);\n            if (scope.visited.has(newPathKey)) {\n                return;\n            }\n            if (unique(newPath) && same(newPath, input)) {\n                yield newPath;\n                scope.visited.set(newPathKey, true);\n                yield* optimize(newPath, input, scope);\n            }\n        }\n    }\n}\nfunction same(path, input) {\n    return rootDocument.querySelector(selector(path)) === input;\n}\n", "import { finder } from \"@medv/finder\";\nimport { allowedActions, customCSSClasses } from \"./lib.mjs\";\n\n/**\n * Represents a hide action.\n */\nexport class Hidden {\n  constructor(type) {\n    // TODO specify the type of hidden - (deleted from DOM or simply invisible)\n    this.type = type;\n  }\n\n  toJSON() {\n    return [\n      {\n        variant: \"hidden\",\n        data: this.type,\n      },\n    ];\n  }\n}\n\n/**\n * Represents an annotation.\n */\nexport class Annotation {\n  /**\n   * @param {string} text - The annotation text.\n   */\n  constructor(text) {\n    this.text = text;\n  }\n\n  toJSON() {\n    return {\n      variant: \"annotation\",\n      data: this.text,\n    };\n  }\n}\n\n/**\n * Represents a content change.\n */\nexport class TextChange {\n  /**\n   * @param {string} text - The new content.\n   */\n  constructor(text) {\n    this.text = text;\n  }\n\n  toJSON() {\n    return {\n      variant: \"textchange\",\n      data: this.text,\n    };\n  }\n}\n\n/**\n * Modifications container type\n */\nexport class CompositeModification {\n  static properties = [\"annotation\", \"textchange\"];\n\n  constructor() {\n    for (const p of CompositeModification.properties) {\n      this[p] = undefined;\n    }\n  }\n\n  updateAnnotation(annotation) {\n    this.annotation = annotation;\n  }\n\n  updateTextChange(textchange) {\n    this.textchange = textchange;\n  }\n\n  toJSON() {\n    let json = [];\n    let props = CompositeModification.properties.filter(\n      (prop_name) => this[prop_name],\n    );\n    props.forEach((prop_name) => json.push(JSON.stringify(this[prop_name])));\n  }\n}\n\n/**\n * Container for changes made to a particular element.\n */\nexport class NodeModification {\n  /**\n   * Note: Constructor should NOT be called outside of this file, everything should be done through PageModifications\n   * @param {Node} node - The DOM node that has been modified.\n   * @param {Hidden | CompositeModification} modifications - The modifications made to the node.\n   */\n  constructor(node) {\n    this.node = node;\n    this.modifications = new CompositeModification();\n    // TODO: Remove custom export class names that allow selection of elements\n    // (e.g blue border on hover)\n  }\n\n  /** @returns {boolean} */\n  isHidden() {\n    return this.modifications instanceof Hidden;\n  }\n\n  setHidden() {\n    this.modifications = new Hidden();\n    // TODO set UI modifications only within data structure and not outside\n    this.node.classList.add(\"hidden-hover\");\n  }\n\n  setCompositeModification() {\n    this.node.classList.remove(\"hidden-hover\");\n    this.modifications = new CompositeModification();\n  }\n\n  toggleHidden() {\n    // debugger;\n    // console.log(\"Before Toggle:\", this, this.isHidden());\n    this.isHidden() ? this.setCompositeModification() : this.setHidden();\n    // console.log(\"After Toggle:\", this, this.isHidden());\n  }\n\n  /**\n   * Add / Remove Annotation\n   * @param {Annotation | null} annotation\n   */\n  updateAnnotation(annotation) {\n    if (this.isHidden()) {\n      throw new Error(\"Trying to annotate a hidden element.\");\n    }\n    this.modifications.updateAnnotation(annotation);\n  }\n\n  isEmpty() {\n    if (this.modifications.constructor.name == CompositeModification.name) {\n      for (const prop_name of CompositeModification.properties) {\n        if (this.modifications[prop_name] !== undefined) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  toJSON() {\n    let activeCustomCSS = customCSSClasses.filter((cl) =>\n      this.node.classList.contains(cl),\n    );\n\n    // remove the extension-added CSS\n    this.node.classList.remove(...customCSSClasses);\n\n    let json_obj = undefined;\n    // serialize the modification\n    try {\n      const elem = finder(this.node);\n\n      json_obj = {\n        node: elem,\n        // TODO: modifications: null (for unimplemented/empty mods);\n        modifications: this.modifications.toJSON(),\n      };\n    } catch (e) {\n      console.log(\"Couldn't find node: \", this.node);\n    }\n\n    // add back the extension-added CSS\n    console.log(this.node);\n    this.node.classList.add(...activeCustomCSS);\n\n    if (json_obj.modifications !== undefined) {\n      return json_obj;\n    }\n  }\n  /* TODO add further modifications as needed */\n}\n/**\n * Represents all modifications to a particular page.\n */\nexport class PageModifications {\n  /**\n   * @param {string} url - The URL of the page.\n   */\n  constructor(url) {\n    this.url = url;\n    /** @type {NodeModification[]} nodeModifications - An array of node modifications. */\n    this.nodeModifications = [];\n  }\n\n  /**\n   * Add a new element modification to the page\n   * @param {Node} node\n   */\n  addNodeModification(node) {\n    const nodeModification = new NodeModification(node);\n    this.nodeModifications.push(nodeModification);\n    return nodeModification;\n  }\n\n  /**\n   * Return modifications to a given node\n   * @param {Node} node\n   * @returns {NodeModification | undefined}\n   */\n  getNodeModification(node) {\n    return this.nodeModifications.find(\n      (saved_nodeModication) => saved_nodeModication.node === node,\n    );\n  }\n\n  /* TODO handle further modifications as introduced */\n\n  /**\n   * Check if modifications to a given node already exists,\n   * update it if yes, otherwise add it to nodeModifcations\n   * @param {Node} node\n   * @param {({action: string, data: null | Annotation})} modification\n   */\n  setNodeModification(node, modification) {\n    if (\n      modification === undefined ||\n      modification === null ||\n      !(\n        modification.hasOwnProperty(\"action\") &&\n        modification.hasOwnProperty(\"data\")\n      )\n    ) {\n      throw new Error(\"PageModifications: Malformed Modification attempt.\");\n    }\n\n    let nodeModification = this.getNodeModification(node);\n    if (nodeModification === undefined) {\n      nodeModification = this.addNodeModification(node);\n    }\n\n    switch (modification.action) {\n      case allowedActions.hide:\n        nodeModification.toggleHidden();\n        break;\n      case allowedActions.annotate:\n        nodeModification.updateAnnotation(modification.data);\n      case allowedActions.delete:\n        nodeModification.updateText();\n    }\n\n    // get the modification payload\n    // In a way that gives the content script\n    // an idea of the current state of the modification\n    // To simultaneously ensure no invalid actions are ocurring.\n  }\n\n  /** Stringifies the current state of the modifications object,\n  removes empty modifications\n  * @returns {string}\n  */\n  generateJSON() {\n    // get rid of empty NodeModifications\n    let json = JSON.stringify(\n      {\n        ...this,\n        nodeModifications: this.nodeModifications.filter(\n          (nodeMod) => !nodeMod.isEmpty(),\n        ),\n      },\n      null,\n      2,\n    );\n    return json;\n  }\n}\n\n/**\n * Loads JSON string containing modifications into a PageModifications object.\n * To be immediately applied by the content script.\n * @param {string} jsonString\n * @returns {PageModifications | Error}\n */\nexport function loadModifications(jsonString) {\n  try {\n    let obj = JSON.parse(jsonString);\n    const page_mods = new PageModifications(obj.url);\n\n    for (const nodeModObj of obj.nodeModifications) {\n      const node = document.querySelector(nodeModObj.node);\n\n      if (node !== null) {\n        for (const modObj of nodeModObj.modifications) {\n          console.log(\n            `Element: ${nodeModObj.node} found on page. Applying mods.`,\n          );\n          let modification = {\n            action: \"\",\n            data: null,\n          };\n\n          switch (modObj.variant) {\n            case \"hidden\":\n              modification.action = allowedActions.hide;\n              page_mods.setNodeModification(node, modification);\n              break;\n            default:\n              throw new Error(\"unrecognised modification variant\");\n          }\n        }\n      } else {\n        console.log(\n          `Error: Element ${nodeModObj.node} not found on page. Skipping mods.`,\n        );\n      }\n    }\n    console.log(\"Reconstructed PageMod obj: \", page_mods);\n\n    return page_mods;\n  } catch (err) {\n    console.error(err);\n    throw new Error(\"Malformed JSON Modifications object.\");\n  }\n}\n", "class ModificationStorage {\n  /**\n   * Fetches data from the store.\n   * @param {string} key - The key to fetch data for.\n   * @returns {Promise<null|string>} The fetched data or null if an error occurs.\n   */\n  async get(key) {\n    return null;\n  }\n\n  /**\n   * Sets data in the store.\n   * @param {string} key - The key to set data for.\n   * @param {string} value - The JSON string value to set.\n   * @returns {Promise<boolean>} True if the data was set successfully, false otherwise.\n   */\n  async set(key, value) {\n    return false;\n  }\n}\n\nexport class OnlineModificationStorage extends ModificationStorage {\n  static url = \"https://extension-saver-sh01-24.deno.dev/\";\n\n  /** @param {string} key - url hash*/\n  static async get(key) {\n    console.log(key);\n    debugger;\n    try {\n      const fetch_url = `${OnlineModificationStorage.url}${key}`;\n      console.log(fetch_url);\n      const response = await fetch(fetch_url);\n      if (response.ok) {\n        const data = await response.json();\n        return data.value;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      return null;\n    }\n  }\n\n  /** @param {string} key - url hash\n   * @param {string} value - json modifications*/\n  static async set(key, value) {\n    try {\n      const response = await fetch(`${OnlineModificationStorage.url}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ key: key, value: value }),\n      });\n      return response.ok;\n    } catch (error) {\n      console.error(\"Error setting data:\", error);\n      return false;\n    }\n  }\n}\n\nexport class OfflineModificationStorage extends ModificationStorage {\n  /**\n   * @param {string} key - url hash */\n  static async get(key) {\n    try {\n      const storedModification = await chrome.storage.local.get([key]);\n      if (storedModification[key]) {\n        console.log(\"Found modification!\");\n        return storedModification[key];\n      } else {\n        console.log(\"Modification not found :/\");\n        return null;\n      }\n    } catch {\n      console.error(\n        \"Error while retrieving modification from Extension Storage\",\n      );\n      return null;\n    }\n  }\n  /** @param {string} key - url hash\n   * @param {string} value - json modifications*/\n  static async set(key, value) {\n    try {\n      await chrome.storage.local.set({\n        [key]: value,\n      });\n    } catch (e) {\n      console.error(e);\n      alert(\"Could not save\");\n      return false;\n    }\n    alert(\"Saved successfully\");\n    return true;\n  }\n}\n", "// Content Script: Works only within the context of a particular webpage\n\n// Annotation UI Backend\n// ---------------------------------------------------------------------\n// Needs to pass messages to communicate with the background script\n// ---------------------------------------------------------------------\n\nimport {\n  allowedActions,\n  stateActions,\n  isValidAction,\n  isAllowedAction,\n  isStateAction,\n} from \"./lib.mjs\";\nimport { wrapOverlay, unwrapOverlay } from \"./wrapper.mjs\";\nimport { generateHash } from \"./digest.mjs\";\nimport { PageModifications, loadModifications } from \"./model.mjs\";\nimport { OfflineModificationStorage } from \"./sync.mjs\";\n\n// ---------------------------------------------------------------------\nconst getURL = () =>\n  window.location.protocol +\n  \"//\" +\n  window.location.hostname +\n  (window.location.port ? \":\" + window.location.port : \"\") +\n  window.location.pathname;\n\n/**\n * Toggle overlay display when modifying webpage\n * @param {Event} e\n */\nconst toggleHoveringStyle = (e) => {\n  console.assert(e.target);\n  e.preventDefault();\n  e.target.classList.toggle(\"hovering\");\n};\n\n// ---------------------------------------------------------------------\n\n// --------------------------------------------------------------\n\n/**\n * Keep track of the current state of the extension\n */\nclass ExtensionState {\n  constructor() {\n    this.url = getURL();\n\n    /** @type {string | undefined} */\n    this.url_hash = undefined;\n    this.page_modifications = new PageModifications(this.url);\n\n    /** @type {string | undefined} */\n    this.current_action = undefined;\n\n    /** @type {[string, EventListener][]} */\n    this.current_listeners = [];\n\n    /** @type {boolean | null} */\n    this.is_online = true;\n  }\n\n  async getURLHash() {\n    if (this.url_hash === undefined) {\n      this.url_hash = await generateHash(this.url);\n    }\n    return this.url_hash;\n  }\n\n  unsetAction() {\n    for (const [eventName, listener] of this.current_listeners) {\n      document.removeEventListener(eventName, listener);\n    }\n    this.current_action = undefined;\n  }\n\n  /** @param {string} action */\n  setAction(action) {\n    this.current_action = action;\n    this.current_listeners = [\n      // [\"mouseover\", (e) => wrapOverlay(e.target)],\n      // [\"mouseout\", (e) => unwrapOverlay(e.target)],\n      [\"mouseover\", toggleHoveringStyle],\n      [\"mouseout\", toggleHoveringStyle],\n    ];\n\n    this.current_listeners.push([\n      \"click\",\n      (e) => {\n        e.preventDefault();\n        const node = e.target;\n\n        const modification = {\n          action: action,\n          data: null, // TODO for different types of mods\n        };\n        console.log(\"Node:\", node);\n        console.log(\"Modification:\", modification);\n        console.log(this);\n        this.page_modifications.setNodeModification(node, modification);\n      },\n    ]);\n\n    for (const [eventName, listener] of this.current_listeners) {\n      document.addEventListener(eventName, listener);\n    }\n  }\n\n  /** @param {string} action */\n  handleAction(action) {\n    // when some action was active (not including the current one),\n    // deactivate the other action and activate the current one\n    if (this.current_action !== undefined && this.current_action !== action) {\n      this.unsetAction();\n      this.setAction(action);\n    } else if (this.current_action === action) {\n      this.unsetAction();\n    } else {\n      this.setAction(action);\n    }\n  }\n\n  /** @param {string} mods */\n  logModifications(mods) {\n    console.log(\"Current Modifications State:\", this.page_modifications);\n    console.log(mods);\n  }\n\n  // Figure out how to cache the hash so that\n  // const hash = generateHash(page_modifications.url);\n\n  async saveModifications() {\n    const hash = await this.getURLHash();\n    const mods = this.page_modifications.generateJSON();\n    this.logModifications(mods);\n    // Always save to extension storage\n    await OfflineModificationStorage.set(hash, mods);\n    // Optionally save to server if online\n    if (this.is_online) {\n      const success = await chrome.runtime.sendMessage({\n        type: \"set\",\n        key: hash,\n        value: mods,\n      });\n      if (!success) {\n        console.log(\"Could not save modifications to server.\");\n      }\n    }\n    console.log(\"URL Hash:\", hash);\n  }\n\n  async fetchModifications() {\n    const hash = await this.getURLHash();\n    let mods = undefined;\n\n    try {\n      const online_mods = await chrome.runtime.sendMessage({\n        type: \"get\",\n        key: hash,\n      });\n      if (online_mods !== null) {\n        mods = online_mods;\n        console.log(\"Found Online\");\n      }\n    } catch (error) {\n      console.error(\n        \"While trying to retrieve modifications from the server: \",\n        error,\n      );\n    }\n\n    if (mods === undefined) {\n      console.log(this.is_online);\n      try {\n        const offline_mods = await OfflineModificationStorage.get(hash);\n        if (offline_mods !== null) {\n          mods = offline_mods;\n          console.log(\"Found Offline\");\n        }\n      } catch (error) {\n        console.error(\n          \"While trying to retrieve modifications from extension storage: \",\n          error,\n        );\n      }\n    }\n\n    if (mods !== undefined) {\n      console.log(\"Retrieved Mods:\", mods);\n      try {\n        this.page_modifications = loadModifications(mods);\n        console.log(\"Modifications Applied.\");\n      } catch (error) {\n        console.error(\"Error applying modifications:\", error);\n        this.page_modifications = new PageModifications(getURL());\n        console.error(\"Failed to apply modifications.\");\n      }\n    }\n  }\n}\n\nconst state = new ExtensionState();\n\nchrome.runtime.onMessage.addListener(async (request) => {\n  console.assert(isValidAction(request.action));\n  if (request.action == stateActions.save) {\n    await state.saveModifications();\n  } else if (request.action == stateActions.load) {\n    await state.fetchModifications();\n  } else {\n    state.handleAction(request.action);\n  }\n});\n\nwindow.addEventListener(\"offline\", () => (state.is_online = false));\nwindow.addEventListener(\"online\", () => (state.is_online = true));\n\n// Load modifications when the extension first gets loaded into the webpage\ndocument.onreadystatechange = async () => {\n  if (document.readyState === \"complete\") {\n    await state.fetchModifications();\n  }\n};\n\n//\n// 1. TODO Ensure PageModifications correctly reflects all modifications in real-time\n// Then save it to a stringified JSON object\n//\n// 2. TODO Save the JSON object to chrome.storage\n// so that all extension contexts can access it\n//\n// 3. TODO Load from chrome.storage => JSON => PageModifications\n// This should never be in an invalid state.\n\n// const generateModifications = () => {\n//   return JSON.stringify(page_modifications, null, 2);\n// };\n"],
  "mappings": "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",
  "names": ["attr"]
}
